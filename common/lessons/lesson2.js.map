{"version":3,"sources":["webpack://home/webpack/bootstrap","webpack://home/./lessons/lesson_2/script.js","webpack://home/./lessons/lesson_2/homeworks/zoo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","console","log"],"mappings":"qBACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,oCClFAnC,EAAAkB,EAAAkB,GAAApC,EAAA,oBCiFAqC,QAAQC,IAAI,cAEZD,QAAQC,IAAI","file":"lesson2.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import './homeworks/zoo';\r\n","/*\r\n\r\n  Задание - используя классы и (или) прототипы создать программу, которая будет\r\n  распределять животных по зоопарку.\r\n\r\n  Zoo ={\r\n    name: '',\r\n    AnimalCount: 152,\r\n    zones: {\r\n      mammals: [],\r\n      birds: [],\r\n      fishes: [],\r\n      reptile: [],\r\n      others: []\r\n    },\r\n    addAnimal: function(animalObj){\r\n      // Добавляет животное в зоопарк в нужную зону.\r\n      // зона берется из класса который наследует Animal\r\n      // если у животного нету свойства zone - то добавлять в others\r\n    },\r\n    removeAnimal: function('animalName'){\r\n      // удаляет животное из зоопарка\r\n      // поиск по имени\r\n    },\r\n    getAnimal: function(type, value){\r\n      // выводит информацию о животном\r\n      // поиск по имени или типу где type = name/type\r\n      // а value значение выбраного типа поиска\r\n    },\r\n    countAnimals: function(){\r\n      // функция считает кол-во всех животных во всех зонах\r\n      // и выводит в консоль результат\r\n    }\r\n  }\r\n\r\n  Есть родительский класс Animal у которого есть методы и свойства:\r\n  Animal {\r\n    name: 'Rex', // имя животного для поиска\r\n    phrase: 'woof!',\r\n    foodType: 'herbivore' | 'carnivore', // Травоядное или Плотоядное животное\r\n    eatSomething: function(){ ... }\r\n  }\r\n\r\n  Дальше будут классы, которые расширяют класс Animal - это классы:\r\n  - mammals\r\n  - birds\r\n  - fishes\r\n  - pertile\r\n\r\n  каждый из них имеет свои свойства и методы:\r\n  в данном примере уникальными будут run/speed. У птиц будут методы fly & speed и т.д\r\n  Mammals = {\r\n    zone: mamal, // дублирует название зоны, ставиться по умолчанию\r\n    type: 'wolf', // что за животное\r\n    run: function(){\r\n      console.log( wolf Rex run with speed 15 km/h );\r\n    },\r\n    speed: 15\r\n  }\r\n\r\n  Тестирование:\r\n    new Zoo('name');\r\n    var Rex = new Mammal('Rex', 'woof', 'herbivore', 15 );\r\n    your_zooName.addAnimal(Rex);\r\n      // Добавит в your_zooName.zones.mamals новое животное.\r\n    var Dex = new Mammal('Dex', 'woof', 'herbivore', 11 );\r\n    your_zooName.addAnimal(Dex);\r\n      // Добавит в your_zooName.zones.mamals еще одно новое животное.\r\n\r\n    your_zooName.get('name', 'Rex'); -> {name:\"Rex\", type: 'wolf' ...}\r\n    your_zooName.get('type', 'wolf'); -> [{RexObj},{DexObj}];\r\n\r\n    Программу можно расширить и сделать в виде мини игры с интерфейсом и сдать\r\n    как курсовую работу!\r\n    Идеи:\r\n    - Добавить ранжирование на травоядных и хищников\r\n    - добавив какую-то функцию которая иммитирует жизнь в зоопарке. Питание, движение, сон животных и т.д\r\n    - Условия: Если хищник и травоядный попадает в одну зону, то хищник сьедает травоядное и оно удаляется из зоопарка.\r\n    - Графическая оболочка под программу.\r\n*/\r\n\r\nconsole.log('zoo before');\r\ndebugger\r\nconsole.log('zoo after');"],"sourceRoot":""}